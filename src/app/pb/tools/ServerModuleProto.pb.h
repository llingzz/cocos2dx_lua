// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerModuleProto.proto

#ifndef PROTOBUF_ServerModuleProto_2eproto__INCLUDED
#define PROTOBUF_ServerModuleProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_ServerModuleProto_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsUSER_BAG_PROPImpl();
void InitDefaultsUSER_BAG_PROP();
void InitDefaultsSERVER_TIME_REQImpl();
void InitDefaultsSERVER_TIME_REQ();
void InitDefaultsSERVER_TIME_RESPImpl();
void InitDefaultsSERVER_TIME_RESP();
inline void InitDefaults() {
  InitDefaultsUSER_BAG_PROP();
  InitDefaultsSERVER_TIME_REQ();
  InitDefaultsSERVER_TIME_RESP();
}
}  // namespace protobuf_ServerModuleProto_2eproto
namespace ServerModule {
class SERVER_TIME_REQ;
class SERVER_TIME_REQDefaultTypeInternal;
extern SERVER_TIME_REQDefaultTypeInternal _SERVER_TIME_REQ_default_instance_;
class SERVER_TIME_RESP;
class SERVER_TIME_RESPDefaultTypeInternal;
extern SERVER_TIME_RESPDefaultTypeInternal _SERVER_TIME_RESP_default_instance_;
class USER_BAG_PROP;
class USER_BAG_PROPDefaultTypeInternal;
extern USER_BAG_PROPDefaultTypeInternal _USER_BAG_PROP_default_instance_;
}  // namespace ServerModule
namespace ServerModule {

// ===================================================================

class USER_BAG_PROP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerModule.USER_BAG_PROP) */ {
 public:
  USER_BAG_PROP();
  virtual ~USER_BAG_PROP();

  USER_BAG_PROP(const USER_BAG_PROP& from);

  inline USER_BAG_PROP& operator=(const USER_BAG_PROP& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  USER_BAG_PROP(USER_BAG_PROP&& from) noexcept
    : USER_BAG_PROP() {
    *this = ::std::move(from);
  }

  inline USER_BAG_PROP& operator=(USER_BAG_PROP&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const USER_BAG_PROP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const USER_BAG_PROP* internal_default_instance() {
    return reinterpret_cast<const USER_BAG_PROP*>(
               &_USER_BAG_PROP_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(USER_BAG_PROP* other);
  friend void swap(USER_BAG_PROP& a, USER_BAG_PROP& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline USER_BAG_PROP* New() const PROTOBUF_FINAL { return New(NULL); }

  USER_BAG_PROP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const USER_BAG_PROP& from);
  void MergeFrom(const USER_BAG_PROP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(USER_BAG_PROP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 nType = 1;
  void clear_ntype();
  static const int kNTypeFieldNumber = 1;
  ::google::protobuf::int32 ntype() const;
  void set_ntype(::google::protobuf::int32 value);

  // int32 nItemId = 2;
  void clear_nitemid();
  static const int kNItemIdFieldNumber = 2;
  ::google::protobuf::int32 nitemid() const;
  void set_nitemid(::google::protobuf::int32 value);

  // int32 nItemCount = 3;
  void clear_nitemcount();
  static const int kNItemCountFieldNumber = 3;
  ::google::protobuf::int32 nitemcount() const;
  void set_nitemcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ServerModule.USER_BAG_PROP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 ntype_;
  ::google::protobuf::int32 nitemid_;
  ::google::protobuf::int32 nitemcount_;
  mutable int _cached_size_;
  friend struct ::protobuf_ServerModuleProto_2eproto::TableStruct;
  friend void ::protobuf_ServerModuleProto_2eproto::InitDefaultsUSER_BAG_PROPImpl();
};
// -------------------------------------------------------------------

class SERVER_TIME_REQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerModule.SERVER_TIME_REQ) */ {
 public:
  SERVER_TIME_REQ();
  virtual ~SERVER_TIME_REQ();

  SERVER_TIME_REQ(const SERVER_TIME_REQ& from);

  inline SERVER_TIME_REQ& operator=(const SERVER_TIME_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SERVER_TIME_REQ(SERVER_TIME_REQ&& from) noexcept
    : SERVER_TIME_REQ() {
    *this = ::std::move(from);
  }

  inline SERVER_TIME_REQ& operator=(SERVER_TIME_REQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SERVER_TIME_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SERVER_TIME_REQ* internal_default_instance() {
    return reinterpret_cast<const SERVER_TIME_REQ*>(
               &_SERVER_TIME_REQ_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SERVER_TIME_REQ* other);
  friend void swap(SERVER_TIME_REQ& a, SERVER_TIME_REQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SERVER_TIME_REQ* New() const PROTOBUF_FINAL { return New(NULL); }

  SERVER_TIME_REQ* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SERVER_TIME_REQ& from);
  void MergeFrom(const SERVER_TIME_REQ& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SERVER_TIME_REQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 nReserved2 = 2;
  int nreserved2_size() const;
  void clear_nreserved2();
  static const int kNReserved2FieldNumber = 2;
  ::google::protobuf::int32 nreserved2(int index) const;
  void set_nreserved2(int index, ::google::protobuf::int32 value);
  void add_nreserved2(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nreserved2() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nreserved2();

  // int32 nUserID = 1;
  void clear_nuserid();
  static const int kNUserIDFieldNumber = 1;
  ::google::protobuf::int32 nuserid() const;
  void set_nuserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ServerModule.SERVER_TIME_REQ)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nreserved2_;
  mutable int _nreserved2_cached_byte_size_;
  ::google::protobuf::int32 nuserid_;
  mutable int _cached_size_;
  friend struct ::protobuf_ServerModuleProto_2eproto::TableStruct;
  friend void ::protobuf_ServerModuleProto_2eproto::InitDefaultsSERVER_TIME_REQImpl();
};
// -------------------------------------------------------------------

class SERVER_TIME_RESP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerModule.SERVER_TIME_RESP) */ {
 public:
  SERVER_TIME_RESP();
  virtual ~SERVER_TIME_RESP();

  SERVER_TIME_RESP(const SERVER_TIME_RESP& from);

  inline SERVER_TIME_RESP& operator=(const SERVER_TIME_RESP& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SERVER_TIME_RESP(SERVER_TIME_RESP&& from) noexcept
    : SERVER_TIME_RESP() {
    *this = ::std::move(from);
  }

  inline SERVER_TIME_RESP& operator=(SERVER_TIME_RESP&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SERVER_TIME_RESP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SERVER_TIME_RESP* internal_default_instance() {
    return reinterpret_cast<const SERVER_TIME_RESP*>(
               &_SERVER_TIME_RESP_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SERVER_TIME_RESP* other);
  friend void swap(SERVER_TIME_RESP& a, SERVER_TIME_RESP& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SERVER_TIME_RESP* New() const PROTOBUF_FINAL { return New(NULL); }

  SERVER_TIME_RESP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SERVER_TIME_RESP& from);
  void MergeFrom(const SERVER_TIME_RESP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SERVER_TIME_RESP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 nReserved4 = 2;
  int nreserved4_size() const;
  void clear_nreserved4();
  static const int kNReserved4FieldNumber = 2;
  ::google::protobuf::int32 nreserved4(int index) const;
  void set_nreserved4(int index, ::google::protobuf::int32 value);
  void add_nreserved4(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nreserved4() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nreserved4();

  // repeated .ServerModule.USER_BAG_PROP stRewards = 3;
  int strewards_size() const;
  void clear_strewards();
  static const int kStRewardsFieldNumber = 3;
  const ::ServerModule::USER_BAG_PROP& strewards(int index) const;
  ::ServerModule::USER_BAG_PROP* mutable_strewards(int index);
  ::ServerModule::USER_BAG_PROP* add_strewards();
  ::google::protobuf::RepeatedPtrField< ::ServerModule::USER_BAG_PROP >*
      mutable_strewards();
  const ::google::protobuf::RepeatedPtrField< ::ServerModule::USER_BAG_PROP >&
      strewards() const;

  // bytes szServerTime = 1;
  void clear_szservertime();
  static const int kSzServerTimeFieldNumber = 1;
  const ::std::string& szservertime() const;
  void set_szservertime(const ::std::string& value);
  #if LANG_CXX11
  void set_szservertime(::std::string&& value);
  #endif
  void set_szservertime(const char* value);
  void set_szservertime(const void* value, size_t size);
  ::std::string* mutable_szservertime();
  ::std::string* release_szservertime();
  void set_allocated_szservertime(::std::string* szservertime);

  // @@protoc_insertion_point(class_scope:ServerModule.SERVER_TIME_RESP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nreserved4_;
  mutable int _nreserved4_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::ServerModule::USER_BAG_PROP > strewards_;
  ::google::protobuf::internal::ArenaStringPtr szservertime_;
  mutable int _cached_size_;
  friend struct ::protobuf_ServerModuleProto_2eproto::TableStruct;
  friend void ::protobuf_ServerModuleProto_2eproto::InitDefaultsSERVER_TIME_RESPImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// USER_BAG_PROP

// int32 nType = 1;
inline void USER_BAG_PROP::clear_ntype() {
  ntype_ = 0;
}
inline ::google::protobuf::int32 USER_BAG_PROP::ntype() const {
  // @@protoc_insertion_point(field_get:ServerModule.USER_BAG_PROP.nType)
  return ntype_;
}
inline void USER_BAG_PROP::set_ntype(::google::protobuf::int32 value) {
  
  ntype_ = value;
  // @@protoc_insertion_point(field_set:ServerModule.USER_BAG_PROP.nType)
}

// int32 nItemId = 2;
inline void USER_BAG_PROP::clear_nitemid() {
  nitemid_ = 0;
}
inline ::google::protobuf::int32 USER_BAG_PROP::nitemid() const {
  // @@protoc_insertion_point(field_get:ServerModule.USER_BAG_PROP.nItemId)
  return nitemid_;
}
inline void USER_BAG_PROP::set_nitemid(::google::protobuf::int32 value) {
  
  nitemid_ = value;
  // @@protoc_insertion_point(field_set:ServerModule.USER_BAG_PROP.nItemId)
}

// int32 nItemCount = 3;
inline void USER_BAG_PROP::clear_nitemcount() {
  nitemcount_ = 0;
}
inline ::google::protobuf::int32 USER_BAG_PROP::nitemcount() const {
  // @@protoc_insertion_point(field_get:ServerModule.USER_BAG_PROP.nItemCount)
  return nitemcount_;
}
inline void USER_BAG_PROP::set_nitemcount(::google::protobuf::int32 value) {
  
  nitemcount_ = value;
  // @@protoc_insertion_point(field_set:ServerModule.USER_BAG_PROP.nItemCount)
}

// -------------------------------------------------------------------

// SERVER_TIME_REQ

// int32 nUserID = 1;
inline void SERVER_TIME_REQ::clear_nuserid() {
  nuserid_ = 0;
}
inline ::google::protobuf::int32 SERVER_TIME_REQ::nuserid() const {
  // @@protoc_insertion_point(field_get:ServerModule.SERVER_TIME_REQ.nUserID)
  return nuserid_;
}
inline void SERVER_TIME_REQ::set_nuserid(::google::protobuf::int32 value) {
  
  nuserid_ = value;
  // @@protoc_insertion_point(field_set:ServerModule.SERVER_TIME_REQ.nUserID)
}

// repeated int32 nReserved2 = 2;
inline int SERVER_TIME_REQ::nreserved2_size() const {
  return nreserved2_.size();
}
inline void SERVER_TIME_REQ::clear_nreserved2() {
  nreserved2_.Clear();
}
inline ::google::protobuf::int32 SERVER_TIME_REQ::nreserved2(int index) const {
  // @@protoc_insertion_point(field_get:ServerModule.SERVER_TIME_REQ.nReserved2)
  return nreserved2_.Get(index);
}
inline void SERVER_TIME_REQ::set_nreserved2(int index, ::google::protobuf::int32 value) {
  nreserved2_.Set(index, value);
  // @@protoc_insertion_point(field_set:ServerModule.SERVER_TIME_REQ.nReserved2)
}
inline void SERVER_TIME_REQ::add_nreserved2(::google::protobuf::int32 value) {
  nreserved2_.Add(value);
  // @@protoc_insertion_point(field_add:ServerModule.SERVER_TIME_REQ.nReserved2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SERVER_TIME_REQ::nreserved2() const {
  // @@protoc_insertion_point(field_list:ServerModule.SERVER_TIME_REQ.nReserved2)
  return nreserved2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SERVER_TIME_REQ::mutable_nreserved2() {
  // @@protoc_insertion_point(field_mutable_list:ServerModule.SERVER_TIME_REQ.nReserved2)
  return &nreserved2_;
}

// -------------------------------------------------------------------

// SERVER_TIME_RESP

// bytes szServerTime = 1;
inline void SERVER_TIME_RESP::clear_szservertime() {
  szservertime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SERVER_TIME_RESP::szservertime() const {
  // @@protoc_insertion_point(field_get:ServerModule.SERVER_TIME_RESP.szServerTime)
  return szservertime_.GetNoArena();
}
inline void SERVER_TIME_RESP::set_szservertime(const ::std::string& value) {
  
  szservertime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ServerModule.SERVER_TIME_RESP.szServerTime)
}
#if LANG_CXX11
inline void SERVER_TIME_RESP::set_szservertime(::std::string&& value) {
  
  szservertime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerModule.SERVER_TIME_RESP.szServerTime)
}
#endif
inline void SERVER_TIME_RESP::set_szservertime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  szservertime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerModule.SERVER_TIME_RESP.szServerTime)
}
inline void SERVER_TIME_RESP::set_szservertime(const void* value, size_t size) {
  
  szservertime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerModule.SERVER_TIME_RESP.szServerTime)
}
inline ::std::string* SERVER_TIME_RESP::mutable_szservertime() {
  
  // @@protoc_insertion_point(field_mutable:ServerModule.SERVER_TIME_RESP.szServerTime)
  return szservertime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SERVER_TIME_RESP::release_szservertime() {
  // @@protoc_insertion_point(field_release:ServerModule.SERVER_TIME_RESP.szServerTime)
  
  return szservertime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SERVER_TIME_RESP::set_allocated_szservertime(::std::string* szservertime) {
  if (szservertime != NULL) {
    
  } else {
    
  }
  szservertime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szservertime);
  // @@protoc_insertion_point(field_set_allocated:ServerModule.SERVER_TIME_RESP.szServerTime)
}

// repeated int32 nReserved4 = 2;
inline int SERVER_TIME_RESP::nreserved4_size() const {
  return nreserved4_.size();
}
inline void SERVER_TIME_RESP::clear_nreserved4() {
  nreserved4_.Clear();
}
inline ::google::protobuf::int32 SERVER_TIME_RESP::nreserved4(int index) const {
  // @@protoc_insertion_point(field_get:ServerModule.SERVER_TIME_RESP.nReserved4)
  return nreserved4_.Get(index);
}
inline void SERVER_TIME_RESP::set_nreserved4(int index, ::google::protobuf::int32 value) {
  nreserved4_.Set(index, value);
  // @@protoc_insertion_point(field_set:ServerModule.SERVER_TIME_RESP.nReserved4)
}
inline void SERVER_TIME_RESP::add_nreserved4(::google::protobuf::int32 value) {
  nreserved4_.Add(value);
  // @@protoc_insertion_point(field_add:ServerModule.SERVER_TIME_RESP.nReserved4)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SERVER_TIME_RESP::nreserved4() const {
  // @@protoc_insertion_point(field_list:ServerModule.SERVER_TIME_RESP.nReserved4)
  return nreserved4_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SERVER_TIME_RESP::mutable_nreserved4() {
  // @@protoc_insertion_point(field_mutable_list:ServerModule.SERVER_TIME_RESP.nReserved4)
  return &nreserved4_;
}

// repeated .ServerModule.USER_BAG_PROP stRewards = 3;
inline int SERVER_TIME_RESP::strewards_size() const {
  return strewards_.size();
}
inline void SERVER_TIME_RESP::clear_strewards() {
  strewards_.Clear();
}
inline const ::ServerModule::USER_BAG_PROP& SERVER_TIME_RESP::strewards(int index) const {
  // @@protoc_insertion_point(field_get:ServerModule.SERVER_TIME_RESP.stRewards)
  return strewards_.Get(index);
}
inline ::ServerModule::USER_BAG_PROP* SERVER_TIME_RESP::mutable_strewards(int index) {
  // @@protoc_insertion_point(field_mutable:ServerModule.SERVER_TIME_RESP.stRewards)
  return strewards_.Mutable(index);
}
inline ::ServerModule::USER_BAG_PROP* SERVER_TIME_RESP::add_strewards() {
  // @@protoc_insertion_point(field_add:ServerModule.SERVER_TIME_RESP.stRewards)
  return strewards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ServerModule::USER_BAG_PROP >*
SERVER_TIME_RESP::mutable_strewards() {
  // @@protoc_insertion_point(field_mutable_list:ServerModule.SERVER_TIME_RESP.stRewards)
  return &strewards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerModule::USER_BAG_PROP >&
SERVER_TIME_RESP::strewards() const {
  // @@protoc_insertion_point(field_list:ServerModule.SERVER_TIME_RESP.stRewards)
  return strewards_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ServerModule

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ServerModuleProto_2eproto__INCLUDED
