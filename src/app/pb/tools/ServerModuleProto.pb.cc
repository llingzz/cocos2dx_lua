// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerModuleProto.proto

#include "ServerModuleProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace ServerModule {
class USER_BAG_PROPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<USER_BAG_PROP>
      _instance;
} _USER_BAG_PROP_default_instance_;
class SERVER_TIME_REQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SERVER_TIME_REQ>
      _instance;
} _SERVER_TIME_REQ_default_instance_;
class SERVER_TIME_RESPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SERVER_TIME_RESP>
      _instance;
} _SERVER_TIME_RESP_default_instance_;
}  // namespace ServerModule
namespace protobuf_ServerModuleProto_2eproto {
void InitDefaultsUSER_BAG_PROPImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ServerModule::_USER_BAG_PROP_default_instance_;
    new (ptr) ::ServerModule::USER_BAG_PROP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerModule::USER_BAG_PROP::InitAsDefaultInstance();
}

void InitDefaultsUSER_BAG_PROP() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUSER_BAG_PROPImpl);
}

void InitDefaultsSERVER_TIME_REQImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ServerModule::_SERVER_TIME_REQ_default_instance_;
    new (ptr) ::ServerModule::SERVER_TIME_REQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerModule::SERVER_TIME_REQ::InitAsDefaultInstance();
}

void InitDefaultsSERVER_TIME_REQ() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSERVER_TIME_REQImpl);
}

void InitDefaultsSERVER_TIME_RESPImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ServerModuleProto_2eproto::InitDefaultsUSER_BAG_PROP();
  {
    void* ptr = &::ServerModule::_SERVER_TIME_RESP_default_instance_;
    new (ptr) ::ServerModule::SERVER_TIME_RESP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerModule::SERVER_TIME_RESP::InitAsDefaultInstance();
}

void InitDefaultsSERVER_TIME_RESP() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSERVER_TIME_RESPImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerModule::USER_BAG_PROP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerModule::USER_BAG_PROP, ntype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerModule::USER_BAG_PROP, nitemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerModule::USER_BAG_PROP, nitemcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerModule::SERVER_TIME_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerModule::SERVER_TIME_REQ, nuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerModule::SERVER_TIME_REQ, nreserved2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerModule::SERVER_TIME_RESP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerModule::SERVER_TIME_RESP, szservertime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerModule::SERVER_TIME_RESP, nreserved4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerModule::SERVER_TIME_RESP, strewards_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ServerModule::USER_BAG_PROP)},
  { 8, -1, sizeof(::ServerModule::SERVER_TIME_REQ)},
  { 15, -1, sizeof(::ServerModule::SERVER_TIME_RESP)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerModule::_USER_BAG_PROP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerModule::_SERVER_TIME_REQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerModule::_SERVER_TIME_RESP_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ServerModuleProto.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027ServerModuleProto.proto\022\014ServerModule\""
      "C\n\rUSER_BAG_PROP\022\r\n\005nType\030\001 \001(\005\022\017\n\007nItem"
      "Id\030\002 \001(\005\022\022\n\nnItemCount\030\003 \001(\005\"6\n\017SERVER_T"
      "IME_REQ\022\017\n\007nUserID\030\001 \001(\005\022\022\n\nnReserved2\030\002"
      " \003(\005\"l\n\020SERVER_TIME_RESP\022\024\n\014szServerTime"
      "\030\001 \001(\014\022\022\n\nnReserved4\030\002 \003(\005\022.\n\tstRewards\030"
      "\003 \003(\0132\033.ServerModule.USER_BAG_PROPb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 282);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerModuleProto.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ServerModuleProto_2eproto
namespace ServerModule {

// ===================================================================

void USER_BAG_PROP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int USER_BAG_PROP::kNTypeFieldNumber;
const int USER_BAG_PROP::kNItemIdFieldNumber;
const int USER_BAG_PROP::kNItemCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

USER_BAG_PROP::USER_BAG_PROP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerModuleProto_2eproto::InitDefaultsUSER_BAG_PROP();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerModule.USER_BAG_PROP)
}
USER_BAG_PROP::USER_BAG_PROP(const USER_BAG_PROP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ntype_, &from.ntype_,
    static_cast<size_t>(reinterpret_cast<char*>(&nitemcount_) -
    reinterpret_cast<char*>(&ntype_)) + sizeof(nitemcount_));
  // @@protoc_insertion_point(copy_constructor:ServerModule.USER_BAG_PROP)
}

void USER_BAG_PROP::SharedCtor() {
  ::memset(&ntype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nitemcount_) -
      reinterpret_cast<char*>(&ntype_)) + sizeof(nitemcount_));
  _cached_size_ = 0;
}

USER_BAG_PROP::~USER_BAG_PROP() {
  // @@protoc_insertion_point(destructor:ServerModule.USER_BAG_PROP)
  SharedDtor();
}

void USER_BAG_PROP::SharedDtor() {
}

void USER_BAG_PROP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* USER_BAG_PROP::descriptor() {
  ::protobuf_ServerModuleProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerModuleProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const USER_BAG_PROP& USER_BAG_PROP::default_instance() {
  ::protobuf_ServerModuleProto_2eproto::InitDefaultsUSER_BAG_PROP();
  return *internal_default_instance();
}

USER_BAG_PROP* USER_BAG_PROP::New(::google::protobuf::Arena* arena) const {
  USER_BAG_PROP* n = new USER_BAG_PROP;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void USER_BAG_PROP::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerModule.USER_BAG_PROP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ntype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nitemcount_) -
      reinterpret_cast<char*>(&ntype_)) + sizeof(nitemcount_));
  _internal_metadata_.Clear();
}

bool USER_BAG_PROP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerModule.USER_BAG_PROP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ntype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nItemId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nitemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nItemCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nitemcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerModule.USER_BAG_PROP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerModule.USER_BAG_PROP)
  return false;
#undef DO_
}

void USER_BAG_PROP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerModule.USER_BAG_PROP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nType = 1;
  if (this->ntype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ntype(), output);
  }

  // int32 nItemId = 2;
  if (this->nitemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nitemid(), output);
  }

  // int32 nItemCount = 3;
  if (this->nitemcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nitemcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerModule.USER_BAG_PROP)
}

::google::protobuf::uint8* USER_BAG_PROP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerModule.USER_BAG_PROP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nType = 1;
  if (this->ntype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ntype(), target);
  }

  // int32 nItemId = 2;
  if (this->nitemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nitemid(), target);
  }

  // int32 nItemCount = 3;
  if (this->nitemcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nitemcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerModule.USER_BAG_PROP)
  return target;
}

size_t USER_BAG_PROP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerModule.USER_BAG_PROP)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 nType = 1;
  if (this->ntype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ntype());
  }

  // int32 nItemId = 2;
  if (this->nitemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nitemid());
  }

  // int32 nItemCount = 3;
  if (this->nitemcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nitemcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void USER_BAG_PROP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerModule.USER_BAG_PROP)
  GOOGLE_DCHECK_NE(&from, this);
  const USER_BAG_PROP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const USER_BAG_PROP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerModule.USER_BAG_PROP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerModule.USER_BAG_PROP)
    MergeFrom(*source);
  }
}

void USER_BAG_PROP::MergeFrom(const USER_BAG_PROP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerModule.USER_BAG_PROP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ntype() != 0) {
    set_ntype(from.ntype());
  }
  if (from.nitemid() != 0) {
    set_nitemid(from.nitemid());
  }
  if (from.nitemcount() != 0) {
    set_nitemcount(from.nitemcount());
  }
}

void USER_BAG_PROP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerModule.USER_BAG_PROP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void USER_BAG_PROP::CopyFrom(const USER_BAG_PROP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerModule.USER_BAG_PROP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool USER_BAG_PROP::IsInitialized() const {
  return true;
}

void USER_BAG_PROP::Swap(USER_BAG_PROP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void USER_BAG_PROP::InternalSwap(USER_BAG_PROP* other) {
  using std::swap;
  swap(ntype_, other->ntype_);
  swap(nitemid_, other->nitemid_);
  swap(nitemcount_, other->nitemcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata USER_BAG_PROP::GetMetadata() const {
  protobuf_ServerModuleProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerModuleProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SERVER_TIME_REQ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SERVER_TIME_REQ::kNUserIDFieldNumber;
const int SERVER_TIME_REQ::kNReserved2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SERVER_TIME_REQ::SERVER_TIME_REQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerModuleProto_2eproto::InitDefaultsSERVER_TIME_REQ();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerModule.SERVER_TIME_REQ)
}
SERVER_TIME_REQ::SERVER_TIME_REQ(const SERVER_TIME_REQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nreserved2_(from.nreserved2_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nuserid_ = from.nuserid_;
  // @@protoc_insertion_point(copy_constructor:ServerModule.SERVER_TIME_REQ)
}

void SERVER_TIME_REQ::SharedCtor() {
  nuserid_ = 0;
  _cached_size_ = 0;
}

SERVER_TIME_REQ::~SERVER_TIME_REQ() {
  // @@protoc_insertion_point(destructor:ServerModule.SERVER_TIME_REQ)
  SharedDtor();
}

void SERVER_TIME_REQ::SharedDtor() {
}

void SERVER_TIME_REQ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SERVER_TIME_REQ::descriptor() {
  ::protobuf_ServerModuleProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerModuleProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SERVER_TIME_REQ& SERVER_TIME_REQ::default_instance() {
  ::protobuf_ServerModuleProto_2eproto::InitDefaultsSERVER_TIME_REQ();
  return *internal_default_instance();
}

SERVER_TIME_REQ* SERVER_TIME_REQ::New(::google::protobuf::Arena* arena) const {
  SERVER_TIME_REQ* n = new SERVER_TIME_REQ;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SERVER_TIME_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerModule.SERVER_TIME_REQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nreserved2_.Clear();
  nuserid_ = 0;
  _internal_metadata_.Clear();
}

bool SERVER_TIME_REQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerModule.SERVER_TIME_REQ)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 nUserID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 nReserved2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_nreserved2())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_nreserved2())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerModule.SERVER_TIME_REQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerModule.SERVER_TIME_REQ)
  return false;
#undef DO_
}

void SERVER_TIME_REQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerModule.SERVER_TIME_REQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nUserID = 1;
  if (this->nuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nuserid(), output);
  }

  // repeated int32 nReserved2 = 2;
  if (this->nreserved2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nreserved2_cached_byte_size_));
  }
  for (int i = 0, n = this->nreserved2_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->nreserved2(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerModule.SERVER_TIME_REQ)
}

::google::protobuf::uint8* SERVER_TIME_REQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerModule.SERVER_TIME_REQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nUserID = 1;
  if (this->nuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nuserid(), target);
  }

  // repeated int32 nReserved2 = 2;
  if (this->nreserved2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _nreserved2_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->nreserved2_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerModule.SERVER_TIME_REQ)
  return target;
}

size_t SERVER_TIME_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerModule.SERVER_TIME_REQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 nReserved2 = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->nreserved2_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nreserved2_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 nUserID = 1;
  if (this->nuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nuserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SERVER_TIME_REQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerModule.SERVER_TIME_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const SERVER_TIME_REQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SERVER_TIME_REQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerModule.SERVER_TIME_REQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerModule.SERVER_TIME_REQ)
    MergeFrom(*source);
  }
}

void SERVER_TIME_REQ::MergeFrom(const SERVER_TIME_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerModule.SERVER_TIME_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nreserved2_.MergeFrom(from.nreserved2_);
  if (from.nuserid() != 0) {
    set_nuserid(from.nuserid());
  }
}

void SERVER_TIME_REQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerModule.SERVER_TIME_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SERVER_TIME_REQ::CopyFrom(const SERVER_TIME_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerModule.SERVER_TIME_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SERVER_TIME_REQ::IsInitialized() const {
  return true;
}

void SERVER_TIME_REQ::Swap(SERVER_TIME_REQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SERVER_TIME_REQ::InternalSwap(SERVER_TIME_REQ* other) {
  using std::swap;
  nreserved2_.InternalSwap(&other->nreserved2_);
  swap(nuserid_, other->nuserid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SERVER_TIME_REQ::GetMetadata() const {
  protobuf_ServerModuleProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerModuleProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SERVER_TIME_RESP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SERVER_TIME_RESP::kSzServerTimeFieldNumber;
const int SERVER_TIME_RESP::kNReserved4FieldNumber;
const int SERVER_TIME_RESP::kStRewardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SERVER_TIME_RESP::SERVER_TIME_RESP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerModuleProto_2eproto::InitDefaultsSERVER_TIME_RESP();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerModule.SERVER_TIME_RESP)
}
SERVER_TIME_RESP::SERVER_TIME_RESP(const SERVER_TIME_RESP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nreserved4_(from.nreserved4_),
      strewards_(from.strewards_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szservertime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.szservertime().size() > 0) {
    szservertime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szservertime_);
  }
  // @@protoc_insertion_point(copy_constructor:ServerModule.SERVER_TIME_RESP)
}

void SERVER_TIME_RESP::SharedCtor() {
  szservertime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SERVER_TIME_RESP::~SERVER_TIME_RESP() {
  // @@protoc_insertion_point(destructor:ServerModule.SERVER_TIME_RESP)
  SharedDtor();
}

void SERVER_TIME_RESP::SharedDtor() {
  szservertime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SERVER_TIME_RESP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SERVER_TIME_RESP::descriptor() {
  ::protobuf_ServerModuleProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerModuleProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SERVER_TIME_RESP& SERVER_TIME_RESP::default_instance() {
  ::protobuf_ServerModuleProto_2eproto::InitDefaultsSERVER_TIME_RESP();
  return *internal_default_instance();
}

SERVER_TIME_RESP* SERVER_TIME_RESP::New(::google::protobuf::Arena* arena) const {
  SERVER_TIME_RESP* n = new SERVER_TIME_RESP;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SERVER_TIME_RESP::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerModule.SERVER_TIME_RESP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nreserved4_.Clear();
  strewards_.Clear();
  szservertime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SERVER_TIME_RESP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerModule.SERVER_TIME_RESP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes szServerTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_szservertime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 nReserved4 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_nreserved4())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_nreserved4())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ServerModule.USER_BAG_PROP stRewards = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_strewards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerModule.SERVER_TIME_RESP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerModule.SERVER_TIME_RESP)
  return false;
#undef DO_
}

void SERVER_TIME_RESP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerModule.SERVER_TIME_RESP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes szServerTime = 1;
  if (this->szservertime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->szservertime(), output);
  }

  // repeated int32 nReserved4 = 2;
  if (this->nreserved4_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nreserved4_cached_byte_size_));
  }
  for (int i = 0, n = this->nreserved4_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->nreserved4(i), output);
  }

  // repeated .ServerModule.USER_BAG_PROP stRewards = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->strewards_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->strewards(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerModule.SERVER_TIME_RESP)
}

::google::protobuf::uint8* SERVER_TIME_RESP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerModule.SERVER_TIME_RESP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes szServerTime = 1;
  if (this->szservertime().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->szservertime(), target);
  }

  // repeated int32 nReserved4 = 2;
  if (this->nreserved4_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _nreserved4_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->nreserved4_, target);
  }

  // repeated .ServerModule.USER_BAG_PROP stRewards = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->strewards_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->strewards(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerModule.SERVER_TIME_RESP)
  return target;
}

size_t SERVER_TIME_RESP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerModule.SERVER_TIME_RESP)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 nReserved4 = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->nreserved4_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nreserved4_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .ServerModule.USER_BAG_PROP stRewards = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->strewards_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->strewards(static_cast<int>(i)));
    }
  }

  // bytes szServerTime = 1;
  if (this->szservertime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->szservertime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SERVER_TIME_RESP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerModule.SERVER_TIME_RESP)
  GOOGLE_DCHECK_NE(&from, this);
  const SERVER_TIME_RESP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SERVER_TIME_RESP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerModule.SERVER_TIME_RESP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerModule.SERVER_TIME_RESP)
    MergeFrom(*source);
  }
}

void SERVER_TIME_RESP::MergeFrom(const SERVER_TIME_RESP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerModule.SERVER_TIME_RESP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nreserved4_.MergeFrom(from.nreserved4_);
  strewards_.MergeFrom(from.strewards_);
  if (from.szservertime().size() > 0) {

    szservertime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szservertime_);
  }
}

void SERVER_TIME_RESP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerModule.SERVER_TIME_RESP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SERVER_TIME_RESP::CopyFrom(const SERVER_TIME_RESP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerModule.SERVER_TIME_RESP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SERVER_TIME_RESP::IsInitialized() const {
  return true;
}

void SERVER_TIME_RESP::Swap(SERVER_TIME_RESP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SERVER_TIME_RESP::InternalSwap(SERVER_TIME_RESP* other) {
  using std::swap;
  nreserved4_.InternalSwap(&other->nreserved4_);
  strewards_.InternalSwap(&other->strewards_);
  szservertime_.Swap(&other->szservertime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SERVER_TIME_RESP::GetMetadata() const {
  protobuf_ServerModuleProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerModuleProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ServerModule

// @@protoc_insertion_point(global_scope)
