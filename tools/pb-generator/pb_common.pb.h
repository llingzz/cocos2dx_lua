// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb_common.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_pb_5fcommon_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_pb_5fcommon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_pb_5fcommon_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_pb_5fcommon_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_pb_5fcommon_2eproto;
namespace pb_common {
class data_begin;
struct data_beginDefaultTypeInternal;
extern data_beginDefaultTypeInternal _data_begin_default_instance_;
class data_frame;
struct data_frameDefaultTypeInternal;
extern data_frameDefaultTypeInternal _data_frame_default_instance_;
class data_head;
struct data_headDefaultTypeInternal;
extern data_headDefaultTypeInternal _data_head_default_instance_;
class data_ope;
struct data_opeDefaultTypeInternal;
extern data_opeDefaultTypeInternal _data_ope_default_instance_;
class data_ope_frames;
struct data_ope_framesDefaultTypeInternal;
extern data_ope_framesDefaultTypeInternal _data_ope_frames_default_instance_;
class data_ready;
struct data_readyDefaultTypeInternal;
extern data_readyDefaultTypeInternal _data_ready_default_instance_;
class data_user_info;
struct data_user_infoDefaultTypeInternal;
extern data_user_infoDefaultTypeInternal _data_user_info_default_instance_;
}  // namespace pb_common
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace pb_common {
enum protocol_code : int {
  protocol_user_info = 1,
  protocol_ready = 2,
  protocol_begin = 3,
  protocol_frame = 4,
};

bool protocol_code_IsValid(int value);
extern const uint32_t protocol_code_internal_data_[];
constexpr protocol_code protocol_code_MIN = static_cast<protocol_code>(1);
constexpr protocol_code protocol_code_MAX = static_cast<protocol_code>(4);
constexpr int protocol_code_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
protocol_code_descriptor();
template <typename T>
const std::string& protocol_code_Name(T value) {
  static_assert(std::is_same<T, protocol_code>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to protocol_code_Name().");
  return protocol_code_Name(static_cast<protocol_code>(value));
}
template <>
inline const std::string& protocol_code_Name(protocol_code value) {
  return ::google::protobuf::internal::NameOfDenseEnum<protocol_code_descriptor,
                                                 1, 4>(
      static_cast<int>(value));
}
inline bool protocol_code_Parse(absl::string_view name, protocol_code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<protocol_code>(
      protocol_code_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class data_user_info final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_common.data_user_info) */ {
 public:
  inline data_user_info() : data_user_info(nullptr) {}
  ~data_user_info() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR data_user_info(::google::protobuf::internal::ConstantInitialized);

  inline data_user_info(const data_user_info& from)
      : data_user_info(nullptr, from) {}
  data_user_info(data_user_info&& from) noexcept
    : data_user_info() {
    *this = ::std::move(from);
  }

  inline data_user_info& operator=(const data_user_info& from) {
    CopyFrom(from);
    return *this;
  }
  inline data_user_info& operator=(data_user_info&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const data_user_info& default_instance() {
    return *internal_default_instance();
  }
  static inline const data_user_info* internal_default_instance() {
    return reinterpret_cast<const data_user_info*>(
               &_data_user_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(data_user_info& a, data_user_info& b) {
    a.Swap(&b);
  }
  inline void Swap(data_user_info* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(data_user_info* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  data_user_info* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<data_user_info>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const data_user_info& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const data_user_info& from) {
    data_user_info::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(data_user_info* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_common.data_user_info";
  }
  protected:
  explicit data_user_info(::google::protobuf::Arena* arena);
  data_user_info(::google::protobuf::Arena* arena, const data_user_info& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUseridFieldNumber = 1,
  };
  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid() ;
  ::int32_t userid() const;
  void set_userid(::int32_t value);

  private:
  ::int32_t _internal_userid() const;
  void _internal_set_userid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb_common.data_user_info)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t userid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pb_5fcommon_2eproto;
};// -------------------------------------------------------------------

class data_ready final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_common.data_ready) */ {
 public:
  inline data_ready() : data_ready(nullptr) {}
  ~data_ready() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR data_ready(::google::protobuf::internal::ConstantInitialized);

  inline data_ready(const data_ready& from)
      : data_ready(nullptr, from) {}
  data_ready(data_ready&& from) noexcept
    : data_ready() {
    *this = ::std::move(from);
  }

  inline data_ready& operator=(const data_ready& from) {
    CopyFrom(from);
    return *this;
  }
  inline data_ready& operator=(data_ready&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const data_ready& default_instance() {
    return *internal_default_instance();
  }
  static inline const data_ready* internal_default_instance() {
    return reinterpret_cast<const data_ready*>(
               &_data_ready_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(data_ready& a, data_ready& b) {
    a.Swap(&b);
  }
  inline void Swap(data_ready* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(data_ready* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  data_ready* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<data_ready>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const data_ready& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const data_ready& from) {
    data_ready::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(data_ready* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_common.data_ready";
  }
  protected:
  explicit data_ready(::google::protobuf::Arena* arena);
  data_ready(::google::protobuf::Arena* arena, const data_ready& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUseridFieldNumber = 1,
  };
  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid() ;
  ::int32_t userid() const;
  void set_userid(::int32_t value);

  private:
  ::int32_t _internal_userid() const;
  void _internal_set_userid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb_common.data_ready)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t userid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pb_5fcommon_2eproto;
};// -------------------------------------------------------------------

class data_ope final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_common.data_ope) */ {
 public:
  inline data_ope() : data_ope(nullptr) {}
  ~data_ope() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR data_ope(::google::protobuf::internal::ConstantInitialized);

  inline data_ope(const data_ope& from)
      : data_ope(nullptr, from) {}
  data_ope(data_ope&& from) noexcept
    : data_ope() {
    *this = ::std::move(from);
  }

  inline data_ope& operator=(const data_ope& from) {
    CopyFrom(from);
    return *this;
  }
  inline data_ope& operator=(data_ope&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const data_ope& default_instance() {
    return *internal_default_instance();
  }
  static inline const data_ope* internal_default_instance() {
    return reinterpret_cast<const data_ope*>(
               &_data_ope_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(data_ope& a, data_ope& b) {
    a.Swap(&b);
  }
  inline void Swap(data_ope* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(data_ope* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  data_ope* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<data_ope>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const data_ope& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const data_ope& from) {
    data_ope::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(data_ope* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_common.data_ope";
  }
  protected:
  explicit data_ope(::google::protobuf::Arena* arena);
  data_ope(::google::protobuf::Arena* arena, const data_ope& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUseridFieldNumber = 1,
    kFrameidFieldNumber = 2,
    kOpecodeFieldNumber = 3,
  };
  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid() ;
  ::int32_t userid() const;
  void set_userid(::int32_t value);

  private:
  ::int32_t _internal_userid() const;
  void _internal_set_userid(::int32_t value);

  public:
  // optional int32 frameid = 2;
  bool has_frameid() const;
  void clear_frameid() ;
  ::int32_t frameid() const;
  void set_frameid(::int32_t value);

  private:
  ::int32_t _internal_frameid() const;
  void _internal_set_frameid(::int32_t value);

  public:
  // optional int32 opecode = 3;
  bool has_opecode() const;
  void clear_opecode() ;
  ::int32_t opecode() const;
  void set_opecode(::int32_t value);

  private:
  ::int32_t _internal_opecode() const;
  void _internal_set_opecode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb_common.data_ope)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t userid_;
    ::int32_t frameid_;
    ::int32_t opecode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pb_5fcommon_2eproto;
};// -------------------------------------------------------------------

class data_head final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_common.data_head) */ {
 public:
  inline data_head() : data_head(nullptr) {}
  ~data_head() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR data_head(::google::protobuf::internal::ConstantInitialized);

  inline data_head(const data_head& from)
      : data_head(nullptr, from) {}
  data_head(data_head&& from) noexcept
    : data_head() {
    *this = ::std::move(from);
  }

  inline data_head& operator=(const data_head& from) {
    CopyFrom(from);
    return *this;
  }
  inline data_head& operator=(data_head&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const data_head& default_instance() {
    return *internal_default_instance();
  }
  static inline const data_head* internal_default_instance() {
    return reinterpret_cast<const data_head*>(
               &_data_head_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(data_head& a, data_head& b) {
    a.Swap(&b);
  }
  inline void Swap(data_head* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(data_head* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  data_head* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<data_head>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const data_head& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const data_head& from) {
    data_head::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(data_head* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_common.data_head";
  }
  protected:
  explicit data_head(::google::protobuf::Arena* arena);
  data_head(::google::protobuf::Arena* arena, const data_head& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataStrFieldNumber = 10,
    kProtocolCodeFieldNumber = 1,
    kDataLenFieldNumber = 9,
  };
  // optional bytes data_str = 10;
  bool has_data_str() const;
  void clear_data_str() ;
  const std::string& data_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_str(Arg_&& arg, Args_... args);
  std::string* mutable_data_str();
  PROTOBUF_NODISCARD std::string* release_data_str();
  void set_allocated_data_str(std::string* value);

  private:
  const std::string& _internal_data_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_str(
      const std::string& value);
  std::string* _internal_mutable_data_str();

  public:
  // optional int32 protocol_code = 1;
  bool has_protocol_code() const;
  void clear_protocol_code() ;
  ::int32_t protocol_code() const;
  void set_protocol_code(::int32_t value);

  private:
  ::int32_t _internal_protocol_code() const;
  void _internal_set_protocol_code(::int32_t value);

  public:
  // optional int32 data_len = 9;
  bool has_data_len() const;
  void clear_data_len() ;
  ::int32_t data_len() const;
  void set_data_len(::int32_t value);

  private:
  ::int32_t _internal_data_len() const;
  void _internal_set_data_len(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb_common.data_head)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_str_;
    ::int32_t protocol_code_;
    ::int32_t data_len_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pb_5fcommon_2eproto;
};// -------------------------------------------------------------------

class data_frame final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_common.data_frame) */ {
 public:
  inline data_frame() : data_frame(nullptr) {}
  ~data_frame() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR data_frame(::google::protobuf::internal::ConstantInitialized);

  inline data_frame(const data_frame& from)
      : data_frame(nullptr, from) {}
  data_frame(data_frame&& from) noexcept
    : data_frame() {
    *this = ::std::move(from);
  }

  inline data_frame& operator=(const data_frame& from) {
    CopyFrom(from);
    return *this;
  }
  inline data_frame& operator=(data_frame&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const data_frame& default_instance() {
    return *internal_default_instance();
  }
  static inline const data_frame* internal_default_instance() {
    return reinterpret_cast<const data_frame*>(
               &_data_frame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(data_frame& a, data_frame& b) {
    a.Swap(&b);
  }
  inline void Swap(data_frame* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(data_frame* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  data_frame* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<data_frame>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const data_frame& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const data_frame& from) {
    data_frame::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(data_frame* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_common.data_frame";
  }
  protected:
  explicit data_frame(::google::protobuf::Arena* arena);
  data_frame(::google::protobuf::Arena* arena, const data_frame& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpecodeFieldNumber = 2,
    kUseridFieldNumber = 1,
  };
  // repeated int32 opecode = 2;
  int opecode_size() const;
  private:
  int _internal_opecode_size() const;

  public:
  void clear_opecode() ;
  ::int32_t opecode(int index) const;
  void set_opecode(int index, ::int32_t value);
  void add_opecode(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& opecode() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_opecode();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_opecode() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_opecode();

  public:
  // optional int32 userid = 1;
  bool has_userid() const;
  void clear_userid() ;
  ::int32_t userid() const;
  void set_userid(::int32_t value);

  private:
  ::int32_t _internal_userid() const;
  void _internal_set_userid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb_common.data_frame)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> opecode_;
    ::int32_t userid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pb_5fcommon_2eproto;
};// -------------------------------------------------------------------

class data_begin final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_common.data_begin) */ {
 public:
  inline data_begin() : data_begin(nullptr) {}
  ~data_begin() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR data_begin(::google::protobuf::internal::ConstantInitialized);

  inline data_begin(const data_begin& from)
      : data_begin(nullptr, from) {}
  data_begin(data_begin&& from) noexcept
    : data_begin() {
    *this = ::std::move(from);
  }

  inline data_begin& operator=(const data_begin& from) {
    CopyFrom(from);
    return *this;
  }
  inline data_begin& operator=(data_begin&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const data_begin& default_instance() {
    return *internal_default_instance();
  }
  static inline const data_begin* internal_default_instance() {
    return reinterpret_cast<const data_begin*>(
               &_data_begin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(data_begin& a, data_begin& b) {
    a.Swap(&b);
  }
  inline void Swap(data_begin* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(data_begin* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  data_begin* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<data_begin>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const data_begin& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const data_begin& from) {
    data_begin::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(data_begin* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_common.data_begin";
  }
  protected:
  explicit data_begin(::google::protobuf::Arena* arena);
  data_begin(::google::protobuf::Arena* arena, const data_begin& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUseridsFieldNumber = 2,
    kRandSeedFieldNumber = 1,
  };
  // repeated int32 userids = 2;
  int userids_size() const;
  private:
  int _internal_userids_size() const;

  public:
  void clear_userids() ;
  ::int32_t userids(int index) const;
  void set_userids(int index, ::int32_t value);
  void add_userids(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& userids() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_userids();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_userids() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_userids();

  public:
  // optional uint32 rand_seed = 1;
  bool has_rand_seed() const;
  void clear_rand_seed() ;
  ::uint32_t rand_seed() const;
  void set_rand_seed(::uint32_t value);

  private:
  ::uint32_t _internal_rand_seed() const;
  void _internal_set_rand_seed(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb_common.data_begin)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> userids_;
    ::uint32_t rand_seed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pb_5fcommon_2eproto;
};// -------------------------------------------------------------------

class data_ope_frames final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_common.data_ope_frames) */ {
 public:
  inline data_ope_frames() : data_ope_frames(nullptr) {}
  ~data_ope_frames() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR data_ope_frames(::google::protobuf::internal::ConstantInitialized);

  inline data_ope_frames(const data_ope_frames& from)
      : data_ope_frames(nullptr, from) {}
  data_ope_frames(data_ope_frames&& from) noexcept
    : data_ope_frames() {
    *this = ::std::move(from);
  }

  inline data_ope_frames& operator=(const data_ope_frames& from) {
    CopyFrom(from);
    return *this;
  }
  inline data_ope_frames& operator=(data_ope_frames&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const data_ope_frames& default_instance() {
    return *internal_default_instance();
  }
  static inline const data_ope_frames* internal_default_instance() {
    return reinterpret_cast<const data_ope_frames*>(
               &_data_ope_frames_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(data_ope_frames& a, data_ope_frames& b) {
    a.Swap(&b);
  }
  inline void Swap(data_ope_frames* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(data_ope_frames* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  data_ope_frames* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<data_ope_frames>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const data_ope_frames& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const data_ope_frames& from) {
    data_ope_frames::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(data_ope_frames* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_common.data_ope_frames";
  }
  protected:
  explicit data_ope_frames(::google::protobuf::Arena* arena);
  data_ope_frames(::google::protobuf::Arena* arena, const data_ope_frames& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFramesFieldNumber = 2,
    kFrameidFieldNumber = 1,
  };
  // repeated .pb_common.data_frame frames = 2;
  int frames_size() const;
  private:
  int _internal_frames_size() const;

  public:
  void clear_frames() ;
  ::pb_common::data_frame* mutable_frames(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_common::data_frame >*
      mutable_frames();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_common::data_frame>& _internal_frames() const;
  ::google::protobuf::RepeatedPtrField<::pb_common::data_frame>* _internal_mutable_frames();
  public:
  const ::pb_common::data_frame& frames(int index) const;
  ::pb_common::data_frame* add_frames();
  const ::google::protobuf::RepeatedPtrField< ::pb_common::data_frame >&
      frames() const;
  // optional int32 frameid = 1;
  bool has_frameid() const;
  void clear_frameid() ;
  ::int32_t frameid() const;
  void set_frameid(::int32_t value);

  private:
  ::int32_t _internal_frameid() const;
  void _internal_set_frameid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb_common.data_ope_frames)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::pb_common::data_frame > frames_;
    ::int32_t frameid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pb_5fcommon_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// data_head

// optional int32 protocol_code = 1;
inline bool data_head::has_protocol_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void data_head::clear_protocol_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.protocol_code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t data_head::protocol_code() const {
  // @@protoc_insertion_point(field_get:pb_common.data_head.protocol_code)
  return _internal_protocol_code();
}
inline void data_head::set_protocol_code(::int32_t value) {
  _internal_set_protocol_code(value);
  // @@protoc_insertion_point(field_set:pb_common.data_head.protocol_code)
}
inline ::int32_t data_head::_internal_protocol_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.protocol_code_;
}
inline void data_head::_internal_set_protocol_code(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.protocol_code_ = value;
}

// optional int32 data_len = 9;
inline bool data_head::has_data_len() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void data_head::clear_data_len() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_len_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t data_head::data_len() const {
  // @@protoc_insertion_point(field_get:pb_common.data_head.data_len)
  return _internal_data_len();
}
inline void data_head::set_data_len(::int32_t value) {
  _internal_set_data_len(value);
  // @@protoc_insertion_point(field_set:pb_common.data_head.data_len)
}
inline ::int32_t data_head::_internal_data_len() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_len_;
}
inline void data_head::_internal_set_data_len(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.data_len_ = value;
}

// optional bytes data_str = 10;
inline bool data_head::has_data_str() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void data_head::clear_data_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_str_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& data_head::data_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb_common.data_head.data_str)
  return _internal_data_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void data_head::set_data_str(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_str_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:pb_common.data_head.data_str)
}
inline std::string* data_head::mutable_data_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_str();
  // @@protoc_insertion_point(field_mutable:pb_common.data_head.data_str)
  return _s;
}
inline const std::string& data_head::_internal_data_str() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_str_.Get();
}
inline void data_head::_internal_set_data_str(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_str_.Set(value, GetArena());
}
inline std::string* data_head::_internal_mutable_data_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_str_.Mutable( GetArena());
}
inline std::string* data_head::release_data_str() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_common.data_head.data_str)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_str_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_str_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void data_head::set_allocated_data_str(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_str_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_str_.IsDefault()) {
          _impl_.data_str_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:pb_common.data_head.data_str)
}

// -------------------------------------------------------------------

// data_user_info

// optional int32 userid = 1;
inline bool data_user_info::has_userid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void data_user_info::clear_userid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t data_user_info::userid() const {
  // @@protoc_insertion_point(field_get:pb_common.data_user_info.userid)
  return _internal_userid();
}
inline void data_user_info::set_userid(::int32_t value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:pb_common.data_user_info.userid)
}
inline ::int32_t data_user_info::_internal_userid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.userid_;
}
inline void data_user_info::_internal_set_userid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.userid_ = value;
}

// -------------------------------------------------------------------

// data_ready

// optional int32 userid = 1;
inline bool data_ready::has_userid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void data_ready::clear_userid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t data_ready::userid() const {
  // @@protoc_insertion_point(field_get:pb_common.data_ready.userid)
  return _internal_userid();
}
inline void data_ready::set_userid(::int32_t value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:pb_common.data_ready.userid)
}
inline ::int32_t data_ready::_internal_userid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.userid_;
}
inline void data_ready::_internal_set_userid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.userid_ = value;
}

// -------------------------------------------------------------------

// data_begin

// optional uint32 rand_seed = 1;
inline bool data_begin::has_rand_seed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void data_begin::clear_rand_seed() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rand_seed_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t data_begin::rand_seed() const {
  // @@protoc_insertion_point(field_get:pb_common.data_begin.rand_seed)
  return _internal_rand_seed();
}
inline void data_begin::set_rand_seed(::uint32_t value) {
  _internal_set_rand_seed(value);
  // @@protoc_insertion_point(field_set:pb_common.data_begin.rand_seed)
}
inline ::uint32_t data_begin::_internal_rand_seed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rand_seed_;
}
inline void data_begin::_internal_set_rand_seed(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.rand_seed_ = value;
}

// repeated int32 userids = 2;
inline int data_begin::_internal_userids_size() const {
  return _internal_userids().size();
}
inline int data_begin::userids_size() const {
  return _internal_userids_size();
}
inline void data_begin::clear_userids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userids_.Clear();
}
inline ::int32_t data_begin::userids(int index) const {
  // @@protoc_insertion_point(field_get:pb_common.data_begin.userids)
  return _internal_userids().Get(index);
}
inline void data_begin::set_userids(int index, ::int32_t value) {
  _internal_mutable_userids()->Set(index, value);
  // @@protoc_insertion_point(field_set:pb_common.data_begin.userids)
}
inline void data_begin::add_userids(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_userids()->Add(value);
  // @@protoc_insertion_point(field_add:pb_common.data_begin.userids)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& data_begin::userids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:pb_common.data_begin.userids)
  return _internal_userids();
}
inline ::google::protobuf::RepeatedField<::int32_t>* data_begin::mutable_userids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:pb_common.data_begin.userids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_userids();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& data_begin::_internal_userids()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.userids_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* data_begin::_internal_mutable_userids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.userids_;
}

// -------------------------------------------------------------------

// data_ope

// optional int32 userid = 1;
inline bool data_ope::has_userid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void data_ope::clear_userid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t data_ope::userid() const {
  // @@protoc_insertion_point(field_get:pb_common.data_ope.userid)
  return _internal_userid();
}
inline void data_ope::set_userid(::int32_t value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:pb_common.data_ope.userid)
}
inline ::int32_t data_ope::_internal_userid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.userid_;
}
inline void data_ope::_internal_set_userid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.userid_ = value;
}

// optional int32 frameid = 2;
inline bool data_ope::has_frameid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void data_ope::clear_frameid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frameid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t data_ope::frameid() const {
  // @@protoc_insertion_point(field_get:pb_common.data_ope.frameid)
  return _internal_frameid();
}
inline void data_ope::set_frameid(::int32_t value) {
  _internal_set_frameid(value);
  // @@protoc_insertion_point(field_set:pb_common.data_ope.frameid)
}
inline ::int32_t data_ope::_internal_frameid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.frameid_;
}
inline void data_ope::_internal_set_frameid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.frameid_ = value;
}

// optional int32 opecode = 3;
inline bool data_ope::has_opecode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void data_ope::clear_opecode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.opecode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t data_ope::opecode() const {
  // @@protoc_insertion_point(field_get:pb_common.data_ope.opecode)
  return _internal_opecode();
}
inline void data_ope::set_opecode(::int32_t value) {
  _internal_set_opecode(value);
  // @@protoc_insertion_point(field_set:pb_common.data_ope.opecode)
}
inline ::int32_t data_ope::_internal_opecode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.opecode_;
}
inline void data_ope::_internal_set_opecode(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.opecode_ = value;
}

// -------------------------------------------------------------------

// data_frame

// optional int32 userid = 1;
inline bool data_frame::has_userid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void data_frame::clear_userid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t data_frame::userid() const {
  // @@protoc_insertion_point(field_get:pb_common.data_frame.userid)
  return _internal_userid();
}
inline void data_frame::set_userid(::int32_t value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:pb_common.data_frame.userid)
}
inline ::int32_t data_frame::_internal_userid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.userid_;
}
inline void data_frame::_internal_set_userid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.userid_ = value;
}

// repeated int32 opecode = 2;
inline int data_frame::_internal_opecode_size() const {
  return _internal_opecode().size();
}
inline int data_frame::opecode_size() const {
  return _internal_opecode_size();
}
inline void data_frame::clear_opecode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.opecode_.Clear();
}
inline ::int32_t data_frame::opecode(int index) const {
  // @@protoc_insertion_point(field_get:pb_common.data_frame.opecode)
  return _internal_opecode().Get(index);
}
inline void data_frame::set_opecode(int index, ::int32_t value) {
  _internal_mutable_opecode()->Set(index, value);
  // @@protoc_insertion_point(field_set:pb_common.data_frame.opecode)
}
inline void data_frame::add_opecode(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_opecode()->Add(value);
  // @@protoc_insertion_point(field_add:pb_common.data_frame.opecode)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& data_frame::opecode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:pb_common.data_frame.opecode)
  return _internal_opecode();
}
inline ::google::protobuf::RepeatedField<::int32_t>* data_frame::mutable_opecode()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:pb_common.data_frame.opecode)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_opecode();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& data_frame::_internal_opecode()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.opecode_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* data_frame::_internal_mutable_opecode() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.opecode_;
}

// -------------------------------------------------------------------

// data_ope_frames

// optional int32 frameid = 1;
inline bool data_ope_frames::has_frameid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void data_ope_frames::clear_frameid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frameid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t data_ope_frames::frameid() const {
  // @@protoc_insertion_point(field_get:pb_common.data_ope_frames.frameid)
  return _internal_frameid();
}
inline void data_ope_frames::set_frameid(::int32_t value) {
  _internal_set_frameid(value);
  // @@protoc_insertion_point(field_set:pb_common.data_ope_frames.frameid)
}
inline ::int32_t data_ope_frames::_internal_frameid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.frameid_;
}
inline void data_ope_frames::_internal_set_frameid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.frameid_ = value;
}

// repeated .pb_common.data_frame frames = 2;
inline int data_ope_frames::_internal_frames_size() const {
  return _internal_frames().size();
}
inline int data_ope_frames::frames_size() const {
  return _internal_frames_size();
}
inline void data_ope_frames::clear_frames() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frames_.Clear();
}
inline ::pb_common::data_frame* data_ope_frames::mutable_frames(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:pb_common.data_ope_frames.frames)
  return _internal_mutable_frames()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::pb_common::data_frame>* data_ope_frames::mutable_frames()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:pb_common.data_ope_frames.frames)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_frames();
}
inline const ::pb_common::data_frame& data_ope_frames::frames(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:pb_common.data_ope_frames.frames)
  return _internal_frames().Get(index);
}
inline ::pb_common::data_frame* data_ope_frames::add_frames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_common::data_frame* _add = _internal_mutable_frames()->Add();
  // @@protoc_insertion_point(field_add:pb_common.data_ope_frames.frames)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::pb_common::data_frame>& data_ope_frames::frames() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:pb_common.data_ope_frames.frames)
  return _internal_frames();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_common::data_frame>&
data_ope_frames::_internal_frames() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.frames_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_common::data_frame>*
data_ope_frames::_internal_mutable_frames() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.frames_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_common


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::pb_common::protocol_code> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::pb_common::protocol_code>() {
  return ::pb_common::protocol_code_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_pb_5fcommon_2eproto_2epb_2eh
